apply plugin:'java'
apply plugin:'java-library-distribution' //for distributions
apply plugin:'application' // possible to use variable like below

sourceCompatibility = 1.7
targetCompatibility = 1.7

// default to UTF-8
[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'

mainClassName = 'io.rezoome.core.runtime.Runtime'
version = '1.0.0'

/*
task inha(type: Jar) {
	manifest {
        attributes 'Implementation-Title': 'Gradle Jar File Example',  
        	'Implementation-Version': version
    }
    archiveName 'inha.jar'
    dependsOn configurations.runtime
	from(sourceSets.main.output) {
		//include "io/rezoome/manager/**"
	}
}
*/

jar {
    manifest {
        attributes 'Manifest-Version' : version	
        //attributes 'Main-Class': mainClassName      
        //attributes 'Class-Path': configurations.runtime.collect { it.getName() }.join(' ')
        attributes "Assembly-Date": new java.util.Date().toString()
    }
    //archiveName project.name + "-" + version + ".jar"
    baseName project.name
    
    // include all sources
    dependsOn configurations.runtime
    from {    	
        configurations.compile.collect {it.isDirectory()? it: zipTree(it)}
    }
    //exclude "io/rezoome/core/runtime/*"
    //exclude "io/rezoome/manager/**"
    //destinationDir = file("${buildDir}/")
    //duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}

repositories {
    mavenCentral()
    maven() {
        url "https://maven.atlassian.com/3rdparty/"
    }
}

def ver = [	
    junit: '4.12',
    slf4j: '1.7.25',
    logback: '1.2.3',
    janino: '2.7.8',
    activemq: '5.15.0',    
    mybatis: '3.1.1',
    mysql:	'5.1.6',
    gson: '2.3.1',
    mysql: '5.1.6',
    oracle: '12.1.0.1-atlassian-hosted'
]

dependencies {
    compile "org.apache.activemq:activemq-client:${ver.activemq}"
    compile "org.apache.activemq:activemq-pool:${ver.activemq}"
    compile "org.mybatis:mybatis:${ver.mybatis}"
    compile "com.google.code.gson:gson:${ver.gson}"
    compile "mysql:mysql-connector-java:${ver.mysql}"
    compile "com.oracle:ojdbc6:${ver.oracle}"    
    compile "ch.qos.logback:logback-classic:${ver.logback}"
	compile "ch.qos.logback:logback-core:${ver.logback}"
	compile "org.slf4j:slf4j-api:${ver.slf4j}"
	compile "org.codehaus.janino:janino:${ver.janino}"	
	
	testCompile "junit:junit:${ver.junit}"
}


/*
sourceSets {
	main {
		java {
			srcDirs = ['src/java']
		}
		
		resources {
			srcDirs = ['src/resources']
		}
	}
}

task inha(type: Jar) {
	manifest {
        attributes(  
        	'Title': 'INHA Univsity',
        	'Version': version,
        	'Main-Class': mainClassName
    	)
  	}
  	archiveName project.name + '_inha.jar'
  	dependsOn configurations.runtime
    from { 
    	configurations.compile.collect {it.isDirectory()? it: zipTree(it)} 
    }
    with jar
}

distributions {
    main {
        baseName = 'agent'
        contents {
            from { 'src' }
        }
    }
}


uploadArchives {
	repositories {
		flatDir {
			dirs 'repos'
		}
	}
}

*/